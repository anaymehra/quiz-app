export const CODING_CONCEPTS = [
    "React Hooks", "JavaScript Promises", "CSS Flexbox", "TypeScript Interfaces",
  "GraphQL Queries", "Node.js Event Loop", "Redux State Management", "WebSockets",
  "Docker Containerization", "Git Branching Strategies", "RESTful API Design",
  "Vue.js Composition API", "Python Decorators", "Rust Ownership Model",
  "Kubernetes Orchestration", "MongoDB Aggregation", "Svelte Reactivity",
  "AWS Lambda Functions", "TensorFlow.js", "Web Assembly",
  "Concurrency and Parallelism",
  "Big O Notation and Algorithm Complexity",
  "Event-Driven Architecture",
  "Message Queuing and RabbitMQ",
  "OAuth 2.0 and Authentication Flows",
  "Multithreading and Race Conditions",
  "Asynchronous Programming in Python",
  "Binary Search Trees and AVL Trees",
  "Machine Learning Hyperparameter Tuning",
  "Microservices Architecture",
  "Data Normalization and Denormalization",
  "Load Balancing and High Availability",
  "Inversion of Control and Dependency Injection",
  "Database Sharding and Partitioning",
  "CAP Theorem in Distributed Systems",
  "Pandas DataFrame Manipulation",
  "Reverse Proxy and Nginx Configuration",
  "Memory Management in C/C++",
  "Regular Expressions (Regex)",
  "SSL/TLS Encryption and Certificates",
  'const value = someCondition && "defaultValue";',
  'const name = user?.profile?.name ?? "Guest";',
  'const num = +"123";',
  '[a, b] = [b, a];',
  'const result = isActive ? "Active" : "Inactive";',

  // Python
  'a, b = b, a',
  'evens = [x for x in numbers if x % 2 == 0]',
  'flat_list = [item for sublist in nested_list for item in sublist]',
  'result = "Positive" if number > 0 else "Negative"',
  'sentence = " ".join(words)',

  // Java
  'String status = (age >= 18) ? "Adult" : "Minor";',
  'List<Integer> list = Arrays.asList(1, 2, 3, 4, 5);',
  'List<String> filtered = list.stream().filter(s -> s.length() > 3).collect(Collectors.toList());',
  'int[] arr = new int[5];',
  'int num = Integer.parseInt("123");',

  // C++
  'int result = (x > y) ? x : y;',
  'bool isEven = (num % 2 == 0);',
  'std::sort(vec.begin(), vec.end(), [](int a, int b) { return a < b; });',
  'for (auto& item : vec) { /* do something with item */ }',
  'std::vector<int> vec(5, 0);'

]
